// Generated by gencpp from file vision/PersonCount.msg
// DO NOT EDIT!


#ifndef VISION_MESSAGE_PERSONCOUNT_H
#define VISION_MESSAGE_PERSONCOUNT_H

#include <ros/service_traits.h>


#include <vision/PersonCountRequest.h>
#include <vision/PersonCountResponse.h>


namespace vision
{

struct PersonCount
{

typedef PersonCountRequest Request;
typedef PersonCountResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct PersonCount
} // namespace vision


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::vision::PersonCount > {
  static const char* value()
  {
    return "5c1a05469ceca6f2dc82e0bc5828de17";
  }

  static const char* value(const ::vision::PersonCount&) { return value(); }
};

template<>
struct DataType< ::vision::PersonCount > {
  static const char* value()
  {
    return "vision/PersonCount";
  }

  static const char* value(const ::vision::PersonCount&) { return value(); }
};


// service_traits::MD5Sum< ::vision::PersonCountRequest> should match
// service_traits::MD5Sum< ::vision::PersonCount >
template<>
struct MD5Sum< ::vision::PersonCountRequest>
{
  static const char* value()
  {
    return MD5Sum< ::vision::PersonCount >::value();
  }
  static const char* value(const ::vision::PersonCountRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::vision::PersonCountRequest> should match
// service_traits::DataType< ::vision::PersonCount >
template<>
struct DataType< ::vision::PersonCountRequest>
{
  static const char* value()
  {
    return DataType< ::vision::PersonCount >::value();
  }
  static const char* value(const ::vision::PersonCountRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::vision::PersonCountResponse> should match
// service_traits::MD5Sum< ::vision::PersonCount >
template<>
struct MD5Sum< ::vision::PersonCountResponse>
{
  static const char* value()
  {
    return MD5Sum< ::vision::PersonCount >::value();
  }
  static const char* value(const ::vision::PersonCountResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::vision::PersonCountResponse> should match
// service_traits::DataType< ::vision::PersonCount >
template<>
struct DataType< ::vision::PersonCountResponse>
{
  static const char* value()
  {
    return DataType< ::vision::PersonCount >::value();
  }
  static const char* value(const ::vision::PersonCountResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // VISION_MESSAGE_PERSONCOUNT_H
